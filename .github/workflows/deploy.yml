# A more descriptive name for the workflow
name: Deploy Python/Flask App to AWS EC2

# This workflow runs on any push to the 'main' branch
on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    name: Deploy to EC2
    # Always use the latest long-term support version of Ubuntu
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository code so the workflow can access it
    - name: Checkout repository
      # Updated from v3 to v4 for the latest features and security fixes
      uses: actions/checkout@v4

    # Step 2: Deploy the application to the EC2 instance via SSH
    - name: Deploy to EC2
      # Pinned to a specific version (v1.0.3) instead of @master for stability
      # Using @master can lead to unexpected failures if breaking changes are pushed
      uses: appleboy/ssh-action@v1.0.3
      with:
        # These values are stored as encrypted secrets in the repository settings
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME || 'ubuntu' }}
        key: ${{ secrets.EC2_KEY }}
        port: ${{ secrets.EC2_PORT || 22 }}

        # The script to execute on the remote server
        script: |
          # 'set -e' ensures the script will exit immediately if any command fails
          set -e
          
          # Navigate to the project directory
          cd ~/hemanttyres
          
          # Pull the latest changes from the main branch
          echo "Pulling latest code from GitHub..."
          git pull origin main
          
          # Instead of sourcing the venv, directly call the pip executable
          # This is more reliable in non-interactive shell scripts
          echo "Installing/updating Python dependencies..."
          venv/bin/pip install -r requirements.txt
          
          # Restart the application service using systemd
          echo "Restarting application service..."
          sudo systemctl restart gunicorn
          
          # Add a health check to ensure the service is active after restart
          # The 'is-active' command will cause the script to fail if the service is not running
          echo "Verifying service status..."
          sudo systemctl is-active --quiet gunicorn
          
          echo "Deployment successful!"